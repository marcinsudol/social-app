{"version":3,"sources":["loading-icon.js","custom-hooks.js","auth.js","login-form.js","login-page.js","app-header.js","full-sized-component.js","loading-content.js","error-content.js","loadable-component.js","avatar.js","content-statistics.js","content-menu.js","comment.js","content-input.js","comments-list.js","dropdown-menu.js","post.js","sr-only.js","posts.js","friend-card.js","friends-list.js","profile-statistic-card.js","profile-status.js","profile.js","friend-profile.js","message.js","conversation.js","friend-selector.js","messages.js","app-content.js","app-page.js","full-screen-component.js","app.js","index.js"],"names":["LoadingIcon","className","sortFromEarliest","item1","item2","Date","createdAt","getTime","sortFromLatest","useDisplayDate","date","useMemo","toLocaleDateString","useReactionsSummary","reactions","auth","useContext","authContext","useState","userReaction","likes","dislikes","reactionsSummary","setReactionsSummary","useEffect","newSummary","forEach","reaction","userId","type","useFetchUser","user","setUser","error","setError","useFetchJson","users","fetchError","fetchUsers","foundUser","find","id","data","setData","AbortController","abortController","fetchJson","useCallback","url","fetch","signal","then","response","json","fetchedData","catch","e","aborted","abort","createContext","LoginForm","loading","setLoading","onSubmit","preventDefault","login","htmlFor","name","LoginPage","href","target","rel","AppHeader","to","onClick","logout","FullSizedComponent","children","style","display","height","width","LoadingContent","ErrorContent","LoadableComponent","Avatar","fontSize","displayStatus","initials","firstName","lastName","fontColor","tinycolor","color","getBrightness","backgroundColor","aria-hidden","status","ContentStatistics","commentsCount","background","parentType","isNaN","ContentMenu","addReaction","Comment","comment","setReactions","reactionType","newReactions","filter","newReaction","now","commentId","push","content","ContentInput","inputLabel","buttonLabel","rows","submit","focusOnMount","focusOnRender","focusAfterSubmit","escapeKeyCallback","inputRef","useRef","newContent","current","value","trim","focus","onKeyUp","key","ref","aria-label","CommentsList","comments","addComment","inputVisible","setInputVisible","length","map","DropdownMenu","visible","setVisible","dropdownRef","hideDropdown","dropdown","addEventListener","removeEventListener","childElem","index","Post","post","setComments","postId","newComments","toUTCString","SrOnly","position","left","top","overflow","Posts","posts","setPosts","fetchPostsError","fetchPosts","fetchCommentsError","fetchComments","postReactions","fetchPostReactionsError","fetchPostReactions","commentReactions","fetchCommentReactionsError","fetchCommentReactions","fetchUsersError","enrichedPosts","setEnrichedPosts","sortedPosts","sort","sortedComments","useFetchPosts","fetchedPosts","postsError","publishPost","newPostContent","newPosts","FriendCard","FriendsList","friends","fetchFriends","pattern","setPattern","filteredFriends","setFilteredFriends","newFilteredFriends","friend","toUpperCase","search","ProfileStatisticCard","label","ProfileStatus","Profile","profileOwner","info","FriendProfile","friendId","useParams","Number","Message","message","Conversation","scrollToBottom","messages","setMessages","friendError","allMessages","fetchAllMessages","sortedMessages","useFetchMessages","fetchedMessages","messagesError","sendMessage","newMessageContent","newMessage","newMessages","FriendSelector","Messages","conversationWrapperRef","view","scrollTo","AppContent","match","useRouteMatch","path","exact","from","AppPage","FullScreenComponent","App","setUserId","logged","setTimeout","useAuth","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fff01e3d.chunk.js","sourcesContent":["import \"./loading-icon.scss\";\r\n\r\nimport { ImSpinner3 as SpinnerIcon } from \"react-icons/im\";\r\n\r\nexport default function LoadingIcon() {\r\n  return (\r\n    <div className=\"loading-icon\">\r\n      <SpinnerIcon />\r\n    </div>\r\n  );\r\n}\r\n","import { authContext } from \"./auth\";\r\nimport { useCallback, useContext, useEffect, useState, useMemo } from \"react\";\r\n\r\n// -------------------------------------------------------------------------\r\n// helper methods for sorting by date\r\n// -------------------------------------------------------------------------\r\nconst sortFromEarliest = (item1, item2) =>\r\n  new Date(item1.createdAt).getTime() - new Date(item2.createdAt).getTime();\r\n\r\nconst sortFromLatest = (item1, item2) =>\r\n  new Date(item2.createdAt).getTime() - new Date(item1.createdAt).getTime();\r\n\r\n// -------------------------------------------------------------------------\r\n// display date hook\r\n// -------------------------------------------------------------------------\r\nexport function useDisplayDate(date) {\r\n  const displayDate = useMemo(\r\n    () => (date ? new Date(date).toLocaleDateString(\"en-US\") : null),\r\n    [date]\r\n  );\r\n  return displayDate;\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// reactions summary hook\r\n// -------------------------------------------------------------------------\r\nexport function useReactionsSummary(reactions) {\r\n  const auth = useContext(authContext);\r\n  const [reactionsSummary, setReactionsSummary] = useState({\r\n    userReaction: \"\",\r\n    likes: 0,\r\n    dislikes: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (reactions) {\r\n      const newSummary = {\r\n        userReaction: \"\",\r\n        likes: 0,\r\n        dislikes: 0,\r\n      };\r\n\r\n      reactions.forEach((reaction) => {\r\n        if (reaction.userId === auth.userId)\r\n          newSummary.userReaction = reaction.type;\r\n\r\n        if (reaction.type === \"like\") newSummary.likes = newSummary.likes + 1;\r\n        else if (reaction.type === \"dislike\")\r\n          newSummary.dislikes = newSummary.dislikes + 1;\r\n      });\r\n\r\n      setReactionsSummary(newSummary);\r\n    }\r\n  }, [reactions, auth]);\r\n\r\n  return reactionsSummary;\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// fetch user data hook\r\n// -------------------------------------------------------------------------\r\nexport function useFetchUser(userId) {\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [users, fetchError, fetchUsers] = useFetchJson();\r\n\r\n  // fetch users\r\n  useEffect(() => {\r\n    fetchUsers(\"./data/users.json\");\r\n  }, [fetchUsers]);\r\n\r\n  // set correct user after fetching\r\n  useEffect(() => {\r\n    if (users) {\r\n      const foundUser = users.find((user) => user.id === userId);\r\n      if (foundUser) {\r\n        setUser(foundUser);\r\n      } else {\r\n        setError(\"User does not exist\");\r\n      }\r\n    }\r\n  }, [userId, users]);\r\n\r\n  // fetch error\r\n  useEffect(() => {\r\n    if (fetchError) {\r\n      setError(\"Error while fetching the data\");\r\n    }\r\n  }, [fetchError]);\r\n\r\n  return [user, error];\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// fetch messages hook\r\n// -------------------------------------------------------------------------\r\nexport function useFetchMessages(friendId) {\r\n  const [messages, setMessages] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const auth = useContext(authContext);\r\n  const [allMessages, fetchError, fetchAllMessages] = useFetchJson();\r\n\r\n  // fetch all messages\r\n  useEffect(() => {\r\n    fetchAllMessages(\"./data/messages.json\");\r\n  }, [fetchAllMessages]);\r\n\r\n  // filter messages\r\n  useEffect(() => {\r\n    if (allMessages) {\r\n      const filteredMessages = allMessages.filter(\r\n        (message) =>\r\n          (message.userId === auth.userId && message.friendId === friendId) ||\r\n          (message.userId === friendId && message.friendId === auth.userId)\r\n      );\r\n      const sortedMessages = filteredMessages.sort(sortFromEarliest);\r\n\r\n      setMessages(sortedMessages);\r\n      setError(null);\r\n    }\r\n  }, [auth, friendId, allMessages]);\r\n\r\n  // set fetch error\r\n  useEffect(() => {\r\n    if (fetchError) {\r\n      setError(\"Error while fetching the data\");\r\n    }\r\n  }, [fetchError]);\r\n\r\n  return [messages, error];\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// fetch posts hook\r\n// -------------------------------------------------------------------------\r\nexport function useFetchPosts() {\r\n  const [posts, fetchPostsError, fetchPosts] = useFetchJson();\r\n  const [comments, fetchCommentsError, fetchComments] = useFetchJson();\r\n  const [\r\n    postReactions,\r\n    fetchPostReactionsError,\r\n    fetchPostReactions,\r\n  ] = useFetchJson();\r\n  const [\r\n    commentReactions,\r\n    fetchCommentReactionsError,\r\n    fetchCommentReactions,\r\n  ] = useFetchJson();\r\n  const [users, fetchUsersError, fetchUsers] = useFetchJson();\r\n  const [enrichedPosts, setEnrichedPosts] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // fetch all data from separate files\r\n  useEffect(() => {\r\n    fetchPosts(\"./data/posts.json\");\r\n  }, [fetchPosts]);\r\n\r\n  useEffect(() => {\r\n    fetchComments(\"./data/comments.json\");\r\n  }, [fetchComments]);\r\n\r\n  useEffect(() => {\r\n    fetchPostReactions(\"./data/post-reactions.json\");\r\n  }, [fetchPostReactions]);\r\n\r\n  useEffect(() => {\r\n    fetchCommentReactions(\"./data/comment-reactions.json\");\r\n  }, [fetchCommentReactions]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(\"./data/users.json\");\r\n  }, [fetchUsers]);\r\n\r\n  // combine all data into enriched posts\r\n  useEffect(() => {\r\n    if (posts && comments && postReactions && commentReactions && users) {\r\n      // sort posts\r\n      const sortedPosts = posts.sort(sortFromLatest);\r\n\r\n      sortedPosts.forEach((post) => {\r\n        // add user data\r\n        post.user = users.find((user) => user.id === post.userId);\r\n\r\n        // add reactions to post\r\n        post.reactions = postReactions.filter(\r\n          (reaction) => reaction.postId === post.id\r\n        );\r\n\r\n        // filter comments related to post\r\n        const postComments = comments.filter(\r\n          (comment) => comment.postId === post.id\r\n        );\r\n        // sort comments\r\n        const sortedComments = postComments.sort(sortFromLatest);\r\n\r\n        // add user data and reactions to comments\r\n        sortedComments.forEach((comment) => {\r\n          comment.user = users.find((user) => user.id === comment.userId);\r\n          comment.reactions = commentReactions.filter(\r\n            (reaction) => reaction.commentId === comment.id\r\n          );\r\n        });\r\n\r\n        // add comments to post\r\n        post.comments = sortedComments;\r\n      });\r\n\r\n      setEnrichedPosts(sortedPosts);\r\n    }\r\n  }, [posts, comments, postReactions, commentReactions, users]);\r\n\r\n  // set fetch error\r\n  useEffect(() => {\r\n    if (\r\n      fetchPostsError ||\r\n      fetchCommentsError ||\r\n      fetchPostReactionsError ||\r\n      fetchCommentReactionsError ||\r\n      fetchUsersError\r\n    ) {\r\n      setError(\"Error while fetching the data\");\r\n    }\r\n  }, [\r\n    fetchPostsError,\r\n    fetchCommentsError,\r\n    fetchPostReactionsError,\r\n    fetchCommentReactionsError,\r\n    fetchUsersError,\r\n  ]);\r\n\r\n  return [enrichedPosts, error];\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// fetch json file hook\r\n// -------------------------------------------------------------------------\r\nexport function useFetchJson() {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [abortController] = useState(new AbortController());\r\n\r\n  const fetchJson = useCallback(\r\n    (url) => {\r\n      setData(null);\r\n      setError(null);\r\n\r\n      fetch(url, { signal: abortController.signal })\r\n        .then((response) => response.json())\r\n        .then((fetchedData) => {\r\n          setData(fetchedData);\r\n        })\r\n        .catch((e) => {\r\n          if (!abortController.signal.aborted) {\r\n            setError(e);\r\n          }\r\n        });\r\n    },\r\n    [abortController]\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      abortController.abort();\r\n    };\r\n  }, [abortController]);\r\n\r\n  return [data, error, fetchJson];\r\n}\r\n","import { createContext, useMemo, useState } from \"react\";\r\nimport { useFetchUser } from \"./custom-hooks\";\r\n\r\nexport const authContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const [userId, setUserId] = useState(false);\r\n  const [user] = useFetchUser(userId);\r\n\r\n  const logged = useMemo(() => !!userId, [userId]);\r\n\r\n  const login = (userId) => {\r\n    setTimeout(() => {\r\n      setUserId(userId);\r\n    }, 500);\r\n  };\r\n\r\n  const logout = () => {\r\n    setTimeout(() => {\r\n      setUserId(null);\r\n    }, 500);\r\n  };\r\n\r\n  return [userId, user, logged, login, logout];\r\n};\r\n","import LoadingIcon from \"./loading-icon\";\r\nimport { authContext } from \"./auth\";\r\nimport \"./login-form.scss\";\r\n\r\nimport { useContext, useState } from \"react\";\r\n\r\nexport default function LoginForm() {\r\n  const [loading, setLoading] = useState(false);\r\n  const auth = useContext(authContext);\r\n\r\n  return (\r\n    <form\r\n      id=\"login-form\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        auth.login(1);\r\n      }}\r\n    >\r\n      <label htmlFor=\"login-username\">Username</label>\r\n      <input id=\"login-username\" name=\"username\" type=\"text\" />\r\n\r\n      <label htmlFor=\"login-password\">Password</label>\r\n      <input id=\"login-password\" name=\"password\" type=\"password\" />\r\n\r\n      <button id=\"login-button\" type=\"submit\">\r\n        {loading ? <LoadingIcon /> : <p>Log in</p>}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import \"./login-page.scss\";\r\nimport LoginForm from \"./login-form\";\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <div id=\"login-page\">\r\n      <header>\r\n        <h1>Social App</h1>\r\n        <ul>\r\n          <li>Only Front-End part of the app</li>\r\n          <li>Mock data fetched from json files</li>\r\n        </ul>\r\n      </header>\r\n\r\n      <main id=\"login-form-container\">\r\n        <LoginForm />\r\n      </main>\r\n\r\n      <footer>\r\n        Photo by{\" \"}\r\n        <a\r\n          href=\"https://unsplash.com/@marekpiwnicki?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Marek Piwnicki\r\n        </a>{\" \"}\r\n        on{\" \"}\r\n        <a\r\n          href=\"https://unsplash.com/@marekpiwnicki?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Unsplash\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import { authContext } from \"./auth\";\r\nimport \"./app-header.scss\";\r\n\r\nimport {\r\n  IoGridOutline,\r\n  IoPeople,\r\n  IoChatbubblesOutline,\r\n  IoPersonCircleOutline,\r\n  IoLogOutOutline,\r\n} from \"react-icons/io5\";\r\nimport { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function AppHeader() {\r\n  const auth = useContext(authContext);\r\n\r\n  return (\r\n    <nav id=\"app-header\">\r\n      <NavLink to=\"/app/posts\">\r\n        <IoGridOutline />\r\n        <span>Posts</span>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/app/friends\">\r\n        <IoPeople />\r\n        <span>Friends</span>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/app/messages\">\r\n        <IoChatbubblesOutline />\r\n        <span>Messages</span>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/app/profile\">\r\n        <IoPersonCircleOutline />\r\n        <span>Profile</span>\r\n      </NavLink>\r\n\r\n      <button id=\"logout-button\" onClick={auth.logout}>\r\n        <IoLogOutOutline />\r\n        <span>Log out</span>\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n","export default function FullSizedComponent({ children }) {\r\n  return (\r\n    <div style={{ display: \"grid\", height: \"100%\", width: \"100%\" }}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import FullSizedComponent from \"./full-sized-component\";\r\nimport LoadingIcon from \"./loading-icon\";\r\nimport \"./loading-content.scss\";\r\n\r\nexport default function LoadingContent() {\r\n  return (\r\n    <FullSizedComponent>\r\n      <div className=\"loading-content\">\r\n        <i>\r\n          <LoadingIcon />\r\n        </i>\r\n        <p>Loading</p>\r\n      </div>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import FullSizedComponent from \"./full-sized-component\";\r\nimport \"./error-content.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ErrorContent({ error }) {\r\n  return (\r\n    <FullSizedComponent>\r\n      <div className=\"error-content\">\r\n        <h2>Error:</h2>\r\n        <p>{error}</p>\r\n        <Link to=\"/\">Return to homepage</Link>\r\n      </div>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import LoadingContent from \"./loading-content\";\r\nimport ErrorContent from \"./error-content\";\r\n\r\nexport default function LoadableComponent({ children, loading, error }) {\r\n  return loading ? (\r\n    <LoadingContent />\r\n  ) : error ? (\r\n    <ErrorContent error={error} />\r\n  ) : (\r\n    children\r\n  );\r\n}\r\n","import \"./avatar.scss\";\r\nimport tinycolor from \"tinycolor2\";\r\n\r\nexport default function Avatar({ user, fontSize, displayStatus }) {\r\n  const initials = user.firstName[0] + user.lastName[0];\r\n  const brightness = tinycolor(user.color).getBrightness();\r\n  let fontColor = \"black\";\r\n  if (brightness < 160) fontColor = \"white\";\r\n\r\n  return (\r\n    <div className=\"avatar-wrapper\" style={{ fontSize }}>\r\n      <div\r\n        className=\"avatar\"\r\n        style={{ backgroundColor: user.color, color: fontColor }}\r\n      >\r\n        <p aria-hidden={true}>{initials}</p>\r\n      </div>\r\n      {displayStatus && user.status === \"online\" && (\r\n        <div className=\"avatar-profile-status online\"></div>\r\n      )}\r\n      {displayStatus && user.status === \"offline\" && (\r\n        <div className=\"avatar-profile-status offline\"></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./content-statistics.scss\";\r\nimport {\r\n  IoHeart as LikeIcon,\r\n  IoHeartDislike as DislikeIcon,\r\n} from \"react-icons/io5\";\r\n\r\nexport default function ContentStatistics({\r\n  reactionsSummary,\r\n  commentsCount,\r\n  background,\r\n  parentType,\r\n}) {\r\n  return (\r\n    <div\r\n      className={\r\n        \"content-statistics\" + (background ? \" background-\" + background : \"\")\r\n      }\r\n    >\r\n      <ol className=\"content-statistics-list\">\r\n        {!isNaN(commentsCount) && (\r\n          <li>\r\n            <strong>{commentsCount}</strong>{\" \"}\r\n            {commentsCount === 1 ? \"comment\" : \"comments\"}\r\n          </li>\r\n        )}\r\n        <li>\r\n          <strong>{reactionsSummary.likes}</strong>{\" \"}\r\n          {reactionsSummary.likes === 1 ? \"like\" : \"likes\"}\r\n        </li>\r\n        <li>\r\n          <strong>{reactionsSummary.dislikes}</strong>{\" \"}\r\n          {reactionsSummary.dislikes === 1 ? \"dislike\" : \"dislikes\"}\r\n        </li>\r\n      </ol>\r\n      {reactionsSummary.userReaction === \"like\" ? (\r\n        <p className=\"reaction-notification\">\r\n          <LikeIcon />\r\n          You liked this {parentType}\r\n        </p>\r\n      ) : reactionsSummary.userReaction === \"dislike\" ? (\r\n        <p className=\"reaction-notification\">\r\n          <DislikeIcon />\r\n          You disliked this {parentType}\r\n        </p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import \"./content-menu.scss\";\r\nimport {\r\n  IoHeart as LikeIcon,\r\n  IoHeartDislike as DislikeIcon,\r\n} from \"react-icons/io5\";\r\n\r\nexport default function ContentMenu({ addReaction, background }) {\r\n  return (\r\n    <div\r\n      className={\r\n        \"content-menu\" + (background ? \" background-\" + background : \"\")\r\n      }\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        className=\"like-button\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          addReaction(\"like\");\r\n        }}\r\n      >\r\n        <LikeIcon />\r\n        Like\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"dislike-button\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          addReaction(\"dislike\");\r\n        }}\r\n      >\r\n        <DislikeIcon />\r\n        Dislike\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import Avatar from \"./avatar\";\r\nimport ContentStatistics from \"./content-statistics\";\r\nimport ContentMenu from \"./content-menu\";\r\nimport \"./comment.scss\";\r\nimport { useCallback, useContext, useState } from \"react\";\r\nimport { useDisplayDate, useReactionsSummary } from \"./custom-hooks\";\r\nimport { authContext } from \"./auth\";\r\n\r\nexport default function Comment({ comment }) {\r\n  const [reactions, setReactions] = useState(comment.reactions);\r\n  const auth = useContext(authContext);\r\n  const reactionsSummary = useReactionsSummary(reactions);\r\n  const createdAt = useDisplayDate(comment.createdAt);\r\n\r\n  const addReaction = useCallback(\r\n    (reactionType) => {\r\n      if (reactionsSummary.userReaction !== reactionType) {\r\n        let newReactions = [];\r\n        if (reactionsSummary.userReaction) {\r\n          // remove previous reaction\r\n          newReactions = reactions.filter(\r\n            (reaction) => reaction.userId !== auth.userId\r\n          );\r\n        } else {\r\n          // copy previous reactions\r\n          newReactions = [...reactions];\r\n        }\r\n\r\n        // create new reaction\r\n        const newReaction = {\r\n          id: Date.now(),\r\n          commentId: comment.id,\r\n          userId: auth.userId,\r\n          type: reactionType,\r\n        };\r\n\r\n        // add reaction to list\r\n        newReactions.push(newReaction);\r\n\r\n        setReactions(newReactions);\r\n      }\r\n    },\r\n    [comment, reactions, reactionsSummary, auth]\r\n  );\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"comment-avatar\">\r\n        <Avatar user={comment.user} />\r\n      </div>\r\n      <div className=\"comment-body\">\r\n        <p className=\"comment-date\">{createdAt}</p>\r\n        <p className=\"comment-content\">{comment.content}</p>\r\n      </div>\r\n\r\n      <div className=\"comment-statistics\">\r\n        <ContentStatistics\r\n          reactionsSummary={reactionsSummary}\r\n          parentType=\"comment\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"comment-menu\">\r\n        <ContentMenu addReaction={addReaction} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./content-input.scss\";\r\n\r\nimport { useCallback, useEffect, useRef } from \"react\";\r\n\r\nexport default function ContentInput({\r\n  inputLabel,\r\n  buttonLabel,\r\n  rows,\r\n  submit,\r\n  focusOnMount,\r\n  focusOnRender,\r\n  focusAfterSubmit,\r\n  escapeKeyCallback,\r\n}) {\r\n  const inputRef = useRef();\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const newContent = inputRef.current.value.trim();\r\n      if (newContent) {\r\n        // create new message object\r\n        submit(newContent);\r\n        // clear input\r\n        inputRef.current.value = \"\";\r\n        // restore focus\r\n        if (focusAfterSubmit) {\r\n          inputRef.current.focus();\r\n        }\r\n      }\r\n    },\r\n    [submit, focusAfterSubmit]\r\n  );\r\n\r\n  const onKeyUp = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (escapeKeyCallback && e.target.value === \"\" && e.key === \"Escape\") {\r\n        escapeKeyCallback();\r\n      }\r\n    },\r\n    [escapeKeyCallback]\r\n  );\r\n\r\n  // focus on mount\r\n  useEffect(() => {\r\n    if (focusOnMount) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [focusOnMount]);\r\n\r\n  // focus on render\r\n  useEffect(() => {\r\n    if (focusOnRender) {\r\n      inputRef.current.focus();\r\n    }\r\n  });\r\n\r\n  // clear when submit changes\r\n  useEffect(() => {\r\n    inputRef.current.value = \"\";\r\n  }, [submit]);\r\n\r\n  return (\r\n    <form className=\"input-form\" onSubmit={onSubmit}>\r\n      {!isNaN(rows) ? (\r\n        <textarea\r\n          rows={rows}\r\n          ref={inputRef}\r\n          onKeyUp={onKeyUp}\r\n          aria-label={inputLabel}\r\n        />\r\n      ) : (\r\n        <input ref={inputRef} onKeyUp={onKeyUp} aria-label={inputLabel} />\r\n      )}\r\n\r\n      <button type=\"submit\">{buttonLabel || \"Submit\"}</button>\r\n    </form>\r\n  );\r\n}\r\n","import Comment from \"./comment\";\r\nimport ContentInput from \"./content-input\";\r\nimport \"./comments-list.scss\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function CommentsList({ comments, addComment }) {\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"comments-menu\">\r\n        {inputVisible ? (\r\n          <ContentInput\r\n            buttonLabel=\"Add comment\"\r\n            rows=\"2\"\r\n            submit={(content) => {\r\n              addComment(content);\r\n              setInputVisible(false);\r\n            }}\r\n            focusOnMount={true}\r\n            escapeKeyCallback={() => {\r\n              setInputVisible(false);\r\n            }}\r\n          />\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            className=\"new-comment-button\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setInputVisible(true);\r\n            }}\r\n          >\r\n            Add new Comment\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <h3 className=\"comments-header\">\r\n        {comments.length > 0 ? \"Latest comments\" : \"No comments\"}\r\n      </h3>\r\n\r\n      <ol className=\"comments-list\">\r\n        {comments.map((comment) => (\r\n          <li key={comment.id}>\r\n            <Comment comment={comment} />\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { IoEllipsisHorizontal } from \"react-icons/io5\";\r\nimport \"./dropdown-menu.scss\";\r\n\r\nexport default function DropdownMenu({ buttonLabel, children }) {\r\n  const [visible, setVisible] = useState(false);\r\n  const dropdownRef = useRef();\r\n\r\n  const hideDropdown = useCallback(() => {\r\n    setVisible(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dropdown = dropdownRef.current;\r\n    dropdown.addEventListener(\"mouseleave\", hideDropdown);\r\n    return () => {\r\n      dropdown.removeEventListener(\"mouseleave\", hideDropdown);\r\n    };\r\n  }, [hideDropdown]);\r\n\r\n  return (\r\n    <div className=\"dropdown-menu\" ref={dropdownRef}>\r\n      <button\r\n        aria-label={buttonLabel}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          setVisible(true);\r\n        }}\r\n      >\r\n        <IoEllipsisHorizontal />\r\n      </button>\r\n\r\n      {visible && (\r\n        <ol>\r\n          {children.map((childElem, index) => (\r\n            <li key={index}>{childElem}</li>\r\n          ))}\r\n        </ol>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import Avatar from \"./avatar\";\r\nimport { useCallback, useContext, useState } from \"react\";\r\nimport \"./post.scss\";\r\nimport ContentStatistics from \"./content-statistics\";\r\nimport ContentMenu from \"./content-menu\";\r\nimport { useDisplayDate, useReactionsSummary } from \"./custom-hooks\";\r\nimport { authContext } from \"./auth\";\r\nimport CommentsList from \"./comments-list\";\r\nimport DropdownMenu from \"./dropdown-menu\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Post({ post }) {\r\n  const [reactions, setReactions] = useState(post.reactions);\r\n  const [comments, setComments] = useState(post.comments);\r\n  const auth = useContext(authContext);\r\n  const reactionsSummary = useReactionsSummary(reactions);\r\n  const createdAt = useDisplayDate(post.createdAt);\r\n\r\n  const addReaction = useCallback(\r\n    (reactionType) => {\r\n      if (reactionsSummary.userReaction !== reactionType) {\r\n        let newReactions = [];\r\n        if (reactionsSummary.userReaction) {\r\n          // remove previous reaction\r\n          newReactions = reactions.filter(\r\n            (reaction) => reaction.userId !== auth.userId\r\n          );\r\n        } else {\r\n          // copy previous reactions\r\n          newReactions = [...reactions];\r\n        }\r\n\r\n        // create new reaction\r\n        const newReaction = {\r\n          id: Date.now(),\r\n          postId: post.id,\r\n          userId: auth.userId,\r\n          type: reactionType,\r\n        };\r\n\r\n        // add reaction to list\r\n        newReactions.push(newReaction);\r\n\r\n        // update reactions\r\n        setReactions(newReactions);\r\n      }\r\n    },\r\n    [post, reactions, reactionsSummary, auth]\r\n  );\r\n\r\n  const addComment = useCallback(\r\n    (content) => {\r\n      // create new comment\r\n      const newComment = {\r\n        id: Date.now(),\r\n        content: content,\r\n        createdAt: new Date().toUTCString(),\r\n        postId: post.id,\r\n        userId: auth.userId,\r\n        user: { ...auth.user },\r\n        reactions: [],\r\n      };\r\n\r\n      // create new comments\r\n      const newComments = [newComment, ...comments];\r\n\r\n      // update comments\r\n      setComments(newComments);\r\n    },\r\n    [post, comments, auth]\r\n  );\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post-header\">\r\n        <div className=\"post-avatar\">\r\n          <Avatar user={post.user} fontSize=\"1.2em\" />\r\n        </div>\r\n        <h2 className=\"post-header-text\">\r\n          {post.user.firstName + \" \" + post.user.lastName}\r\n        </h2>\r\n        <DropdownMenu buttonLabel=\"User's menu\">\r\n          <Link to={\"/app/friends/\" + post.userId}>Go to profile</Link>\r\n          <Link to={\"/app/messages/\" + post.userId}>Start conversation</Link>\r\n        </DropdownMenu>\r\n      </div>\r\n\r\n      <div className=\"post-body\">\r\n        <p className=\"post-date\">{createdAt}</p>\r\n        <p className=\"post-content\">{post.content}</p>\r\n      </div>\r\n\r\n      <div className=\"post-statistics\">\r\n        <ContentStatistics\r\n          reactionsSummary={reactionsSummary}\r\n          commentsCount={comments.length}\r\n          parentType=\"post\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"post-menu\">\r\n        <ContentMenu addReaction={addReaction} />\r\n      </div>\r\n\r\n      <div className=\"post-comments\">\r\n        <CommentsList comments={comments} addComment={addComment} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function SrOnly({ children }) {\r\n  return (\r\n    <div\r\n      className=\"sr-only\"\r\n      style={{\r\n        position: \"absolute\",\r\n        left: \"-10000px\",\r\n        top: \"auto\",\r\n        height: \"1px\",\r\n        width: \"1px\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import LoadableComponent from \"./loadable-component\";\r\nimport FullSizedComponent from \"./full-sized-component\";\r\nimport Post from \"./post\";\r\nimport ContentInput from \"./content-input\";\r\nimport { authContext } from \"./auth\";\r\nimport { useFetchPosts } from \"./custom-hooks\";\r\nimport SrOnly from \"./sr-only\";\r\nimport \"./posts.scss\";\r\n\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nexport default function Posts() {\r\n  const [posts, setPosts] = useState(null);\r\n  const auth = useContext(authContext);\r\n  const [fetchedPosts, postsError] = useFetchPosts();\r\n\r\n  // set posts after initial fetching\r\n  useEffect(() => {\r\n    if (fetchedPosts) {\r\n      setPosts(fetchedPosts);\r\n    }\r\n  }, [fetchedPosts]);\r\n\r\n  // publish post - add new post to posts list\r\n  const publishPost = useCallback(\r\n    (newPostContent) => {\r\n      if (posts && auth.user) {\r\n        // create new post object\r\n        const newPost = {\r\n          id: Date.now(),\r\n          content: newPostContent,\r\n          userId: auth.userId,\r\n          user: { ...auth.user },\r\n          createdAt: new Date().toUTCString(),\r\n          reactions: [],\r\n          comments: [],\r\n        };\r\n        const newPosts = [newPost, ...posts];\r\n        setPosts(newPosts);\r\n      }\r\n    },\r\n    [auth, posts]\r\n  );\r\n\r\n  const error = useMemo(() => (postsError ? \"Error fetching data\" : null), [\r\n    postsError,\r\n  ]);\r\n\r\n  return (\r\n    <FullSizedComponent>\r\n      <LoadableComponent loading={!posts && !error} error={error}>\r\n        <div id=\"posts-wrapper\">\r\n          <div id=\"posts\">\r\n            <SrOnly>\r\n              <h1>Posts</h1>\r\n            </SrOnly>\r\n            <div id=\"new-post-form\">\r\n              <ContentInput\r\n                inputLabel=\"New post\"\r\n                buttonLabel=\"Publish\"\r\n                rows=\"3\"\r\n                submit={publishPost}\r\n              />\r\n            </div>\r\n            <ol id=\"posts-list\">\r\n              {posts\r\n                ? posts.map((post) => (\r\n                    <li key={post.id}>\r\n                      <Post post={post} />\r\n                    </li>\r\n                  ))\r\n                : null}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </LoadableComponent>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import Avatar from \"./avatar\";\r\nimport \"./friend-card.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function FriendCard({ user }) {\r\n  return (\r\n    <Link to={`/app/friends/${user.id}`}>\r\n      <div className=\"friend-card\">\r\n        <div className=\"friend-avatar\">\r\n          <Avatar user={user} fontSize={\"2em\"} displayStatus={true} />\r\n        </div>\r\n\r\n        <div className=\"friend-info\">\r\n          <p>{user.firstName + \" \" + user.lastName}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import { useFetchJson } from \"./custom-hooks\";\r\nimport { useEffect, useState } from \"react\";\r\nimport FullSizedComponent from \"./full-sized-component\";\r\nimport LoadableComponent from \"./loadable-component\";\r\nimport FriendCard from \"./friend-card\";\r\nimport ContentInput from \"./content-input\";\r\nimport { IoClose as CloseIcon } from \"react-icons/io5\";\r\nimport \"./friends-list.scss\";\r\n\r\nexport default function FriendsList() {\r\n  const [friends, error, fetchFriends] = useFetchJson();\r\n  const [pattern, setPattern] = useState(\"\");\r\n  const [filteredFriends, setFilteredFriends] = useState();\r\n\r\n  // fetch friends\r\n  useEffect(() => {\r\n    fetchFriends(\"./data/friends.json\");\r\n  }, [fetchFriends]);\r\n\r\n  // filter friends\r\n  useEffect(() => {\r\n    if (friends) {\r\n      if (pattern) {\r\n        const newFilteredFriends = friends.filter((friend) => {\r\n          const friendName =\r\n            friend.firstName.toUpperCase() +\r\n            \" \" +\r\n            friend.lastName.toUpperCase();\r\n          return friendName.search(pattern.toUpperCase()) !== -1;\r\n        });\r\n        setFilteredFriends(newFilteredFriends);\r\n      } else {\r\n        setFilteredFriends(friends);\r\n      }\r\n    }\r\n  }, [friends, pattern]);\r\n\r\n  return (\r\n    <FullSizedComponent>\r\n      <LoadableComponent loading={!friends && !error} error={error}>\r\n        <div id=\"friends-list\">\r\n          <header>\r\n            <h1>Friends</h1>\r\n            <div id=\"find-friend-input\">\r\n              <ContentInput\r\n                inputLabel=\"Friend's name\"\r\n                buttonLabel=\"Find\"\r\n                submit={(content) => {\r\n                  setPattern(content);\r\n                }}\r\n              />\r\n            </div>\r\n          </header>\r\n          {pattern && (\r\n            <button\r\n              id=\"remove-pattern-button\"\r\n              onClick={() => {\r\n                setPattern(\"\");\r\n              }}\r\n              aria-label=\"Remove filter\"\r\n            >\r\n              <CloseIcon />\r\n              {pattern}\r\n            </button>\r\n          )}\r\n          {filteredFriends ? (\r\n            <div id=\"friends-cards\">\r\n              {filteredFriends.map((user) => (\r\n                <FriendCard user={user} key={user.id} />\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </LoadableComponent>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import \"./profile-statistic-card.scss\";\r\n\r\nexport default function ProfileStatisticCard({ label, value }) {\r\n  return (\r\n    <div className=\"profile-statistic-card\">\r\n      <h2 className=\"card-label\">{label}:</h2>\r\n      <p className=\"card-value\">{value}</p>\r\n    </div>\r\n  );\r\n}\r\n","import \"./profile-status.scss\";\r\n\r\nexport default function ProfileStatus({ status }) {\r\n  return <p className={\"profile-status \" + status}>{status}</p>;\r\n}\r\n","import LoadableComponent from \"./loadable-component\";\r\nimport FullSizedComponent from \"./full-sized-component\";\r\nimport ProfileStatisticCard from \"./profile-statistic-card\";\r\nimport ProfileStatus from \"./profile-status\";\r\nimport Avatar from \"./avatar\";\r\nimport { useFetchUser } from \"./custom-hooks\";\r\nimport { authContext } from \"./auth\";\r\nimport \"./profile.scss\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext, useMemo } from \"react\";\r\n\r\nexport default function Profile({ userId }) {\r\n  const [user, error] = useFetchUser(userId);\r\n  const auth = useContext(authContext);\r\n  const profileOwner = useMemo(() => userId === auth.userId, [userId, auth]);\r\n\r\n  return (\r\n    <FullSizedComponent>\r\n      <LoadableComponent loading={!user && !error} error={error}>\r\n        {user ? (\r\n          <div id=\"profile-wrapper\">\r\n            <div id=\"profile\">\r\n              <div id=\"profile-avatar\">\r\n                <Avatar user={user} fontSize={\"5em\"} />\r\n              </div>\r\n              <div>\r\n                <div id=\"profile-info\">\r\n                  <div id=\"profile-header\">\r\n                    <h1 className=\"display-name\">\r\n                      {user.firstName + \" \" + user.lastName}\r\n                    </h1>\r\n                    <ProfileStatus status={user.status} />\r\n                  </div>\r\n                  <p>{user.info}</p>\r\n                </div>\r\n                <div id=\"profile-statistics\">\r\n                  <ProfileStatisticCard label={\"Friends\"} value={136} />\r\n                  <ProfileStatisticCard label={\"Posts\"} value={342} />\r\n                  <ProfileStatisticCard label={\"Comments\"} value={752} />\r\n                </div>\r\n                {!profileOwner && (\r\n                  <Link\r\n                    id=\"open-conversation-button\"\r\n                    to={`/app/messages/${userId}`}\r\n                  >\r\n                    Open conversation\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </LoadableComponent>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import Profile from \"./profile\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function FriendProfile() {\r\n  const { friendId } = useParams();\r\n\r\n  return <Profile userId={Number(friendId)} />;\r\n}\r\n","import Avatar from \"./avatar\";\r\nimport { authContext } from \"./auth\";\r\nimport \"./message.scss\";\r\nimport { useContext } from \"react\";\r\nimport { useDisplayDate } from \"./custom-hooks\";\r\n\r\nexport default function Message({ friend, message }) {\r\n  const auth = useContext(authContext);\r\n  const createdAt = useDisplayDate(message.createdAt);\r\n\r\n  const type = message.userId === auth.userId ? \"sent\" : \"received\";\r\n\r\n  return (\r\n    <div className={\"message \" + type}>\r\n      {type === \"received\" && (\r\n        <div className=\"message-avatar\">\r\n          <Avatar user={friend} />\r\n        </div>\r\n      )}\r\n      <div className=\"message-body\">\r\n        <p className=\"message-content\">{message.content}</p>\r\n        <p className=\"message-date\">{createdAt}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import FullSizedComponent from \"./full-sized-component\";\r\nimport LoadableComponent from \"./loadable-component\";\r\nimport Message from \"./message\";\r\nimport ProfileStatus from \"./profile-status\";\r\nimport ContentInput from \"./content-input\";\r\nimport { useFetchUser, useFetchMessages } from \"./custom-hooks\";\r\nimport { authContext } from \"./auth\";\r\nimport { useCallback, useContext, useEffect, useState, useMemo } from \"react\";\r\nimport \"./conversation.scss\";\r\n\r\nexport default function Conversation({ friendId, scrollToBottom }) {\r\n  const [messages, setMessages] = useState(null);\r\n  const auth = useContext(authContext);\r\n  const [friend, friendError] = useFetchUser(friendId);\r\n  const [fetchedMessages, messagesError] = useFetchMessages(friendId);\r\n\r\n  // set messages after initial fetching\r\n  useEffect(() => {\r\n    if (fetchedMessages) {\r\n      setMessages(fetchedMessages);\r\n    }\r\n  }, [fetchedMessages]);\r\n\r\n  // send message - add new message to messages list\r\n  const sendMessage = useCallback(\r\n    (newMessageContent) => {\r\n      // create new message object\r\n      const newMessage = {\r\n        id: Date.now(),\r\n        userId: auth.userId,\r\n        friendId,\r\n        content: newMessageContent,\r\n        createdAt: new Date().toUTCString(),\r\n      };\r\n      const newMessages = [...messages, newMessage];\r\n      setMessages(newMessages);\r\n    },\r\n    [auth, friendId, messages]\r\n  );\r\n\r\n  // if messages change, scroll to bottom\r\n  useEffect(() => {\r\n    if (scrollToBottom) scrollToBottom();\r\n  }, [messages, scrollToBottom]);\r\n\r\n  const error = useMemo(\r\n    () => (friendError || messagesError ? \"Error fetching data\" : null),\r\n    [friendError, messagesError]\r\n  );\r\n\r\n  const loading = useMemo(() => !friend && !messages && !error, [\r\n    friend,\r\n    messages,\r\n    error,\r\n  ]);\r\n\r\n  return (\r\n    <FullSizedComponent>\r\n      <LoadableComponent loading={loading} error={error}>\r\n        {friend && messages ? (\r\n          <div id=\"conversation\">\r\n            <header>\r\n              <h1>{friend.firstName + \" \" + friend.lastName}</h1>\r\n              <ProfileStatus status={friend.status} />\r\n            </header>\r\n            <ol id=\"messages-list\">\r\n              {messages.map((message) => (\r\n                <li key={message.id}>\r\n                  <Message friend={friend} message={message} />\r\n                </li>\r\n              ))}\r\n            </ol>\r\n            <div id=\"new-message-form\">\r\n              <ContentInput\r\n                inputLabel=\"New message\"\r\n                buttonLabel=\"Send\"\r\n                rows=\"2\"\r\n                submit={sendMessage}\r\n                focusOnRender={true}\r\n                focusAfterSubmit={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </LoadableComponent>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import LoadableComponent from \"./loadable-component\";\r\nimport Avatar from \"./avatar\";\r\nimport { useFetchJson } from \"./custom-hooks\";\r\nimport \"./friend-selector.scss\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function FriendSelector() {\r\n  const [friends, error, fetchFriends] = useFetchJson();\r\n\r\n  // fetch friends\r\n  useEffect(() => {\r\n    fetchFriends(\"./data/friends.json\");\r\n  }, [fetchFriends]);\r\n\r\n  return (\r\n    <LoadableComponent loading={!friends && !error}>\r\n      {friends ? (\r\n        <nav id=\"friend-selector\" aria-label=\"Friend selector\">\r\n          {friends.map((user) => (\r\n            <Link to={`/app/messages/${user.id}`} key={user.id}>\r\n              <Avatar user={user} fontSize={\"1.6em\"} displayStatus={true} />\r\n              <p className=\"friend-name\">\r\n                {user.firstName + \" \" + user.lastName}\r\n              </p>\r\n            </Link>\r\n          ))}\r\n        </nav>\r\n      ) : null}\r\n    </LoadableComponent>\r\n  );\r\n}\r\n","import { useCallback, useRef } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Conversation from \"./conversation\";\r\nimport { FriendSelector } from \"./friend-selector\";\r\nimport FullSizedComponent from \"./full-sized-component\";\r\nimport \"./messages.scss\";\r\n\r\nexport default function Messages() {\r\n  const { friendId } = useParams();\r\n  const conversationWrapperRef = useRef();\r\n\r\n  const view = friendId ? \"conversation-view\" : \"contacts-view\";\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    conversationWrapperRef.current.scrollTo(0, 10000);\r\n  }, [conversationWrapperRef]);\r\n\r\n  return (\r\n    <div id=\"messages\" className={view}>\r\n      <div id=\"selector-wrapper\">\r\n        <FriendSelector />\r\n      </div>\r\n      <div id=\"conversation-wrapper\" ref={conversationWrapperRef}>\r\n        {friendId ? (\r\n          <Conversation\r\n            friendId={Number(friendId)}\r\n            scrollToBottom={scrollToBottom}\r\n          />\r\n        ) : (\r\n          <FullSizedComponent>\r\n            <div id=\"conversation-pane\">\r\n              <h1>Select contact to start conversation</h1>\r\n            </div>\r\n          </FullSizedComponent>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Posts from \"./posts\";\r\nimport FriendsList from \"./friends-list\";\r\nimport FriendProfile from \"./friend-profile\";\r\nimport Messages from \"./messages\";\r\nimport Profile from \"./profile\";\r\nimport ErrorContent from \"./error-content\";\r\nimport { authContext } from \"./auth\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { Switch, Redirect, Route, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function AppContent() {\r\n  const match = useRouteMatch();\r\n  const auth = useContext(authContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/posts`}>\r\n        <Posts />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/friends/:friendId`}>\r\n        <FriendProfile />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/friends`}>\r\n        <FriendsList />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/messages/:friendId`}>\r\n        <Messages />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/messages`}>\r\n        <Messages />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/profile`}>\r\n        <Profile userId={auth.userId} />\r\n      </Route>\r\n\r\n      <Redirect exact from={match.path} to={`${match.path}/posts`} />\r\n\r\n      <Route path=\"*\">\r\n        <ErrorContent error={\"Page does not exist\"} />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import AppHeader from \"./app-header\";\r\nimport AppContent from \"./app-content\";\r\n\r\nimport \"./app-page.scss\";\r\n\r\nexport default function AppPage() {\r\n  return (\r\n    <div id=\"app-page\">\r\n      <AppHeader />\r\n      <main>\r\n        <AppContent />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","export default function FullScreenComponent({ children }) {\r\n  return (\r\n    <div style={{ display: \"grid\", height: \"100vh\", width: \"100vw\" }}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import LoginPage from \"./login-page\";\r\nimport AppPage from \"./app-page\";\r\nimport ErrorContent from \"./error-content\";\r\nimport FullScreenComponent from \"./full-screen-component\";\r\nimport { authContext, useAuth } from \"./auth\";\r\nimport \"./app.scss\";\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  const [userId, user, logged, login, logout] = useAuth();\r\n\r\n  return (\r\n    <authContext.Provider value={{ userId, user, logged, login, logout }}>\r\n      <Router>\r\n        <Switch>\r\n          {logged ? (\r\n            <Redirect from=\"/login\" to=\"/app\" />\r\n          ) : (\r\n            <Redirect from=\"/app\" to=\"/login\" />\r\n          )}\r\n\r\n          <Route path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n\r\n          <Route path=\"/app\">\r\n            <AppPage />\r\n          </Route>\r\n\r\n          <Route exact path=\"/\">\r\n            {logged ? (\r\n              <Redirect from=\"/\" to=\"/app\" />\r\n            ) : (\r\n              <Redirect from=\"/\" to=\"/login\" />\r\n            )}\r\n          </Route>\r\n\r\n          <Route path=\"*\">\r\n            <FullScreenComponent>\r\n              <ErrorContent error={\"Page does not exist\"} />\r\n            </FullScreenComponent>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </authContext.Provider>\r\n  );\r\n}\r\n","import App from \"./app\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}