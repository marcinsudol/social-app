{"version":3,"sources":["loading-icon.js","custom-hooks.js","auth.js","login-form.js","login-page.js","app-header.js","full-sized-component.js","loading-content.js","error-content.js","loadable-component.js","avatar.js","content-statistics.js","content-menu.js","comment.js","content-input.js","comments-list.js","post.js","posts.js","friend-card.js","friends-list.js","profile-statistic-card.js","profile.js","friend-profile.js","message.js","conversation.js","friend-selector.js","messages.js","app-content.js","app-page.js","full-screen-component.js","app.js","index.js"],"names":["LoadingIcon","className","sortFromEarliest","item1","item2","Date","createdAt","getTime","sortFromLatest","useDisplayDate","date","useMemo","toLocaleDateString","useReactionsSummary","reactions","auth","useContext","authContext","useState","userReaction","likes","dislikes","reactionsSummary","setReactionsSummary","useEffect","newSummary","forEach","reaction","userId","type","useFetchUser","user","setUser","error","setError","useFetchJson","users","fetchError","fetchUsers","foundUser","find","id","data","setData","AbortController","abortController","fetchJson","useCallback","url","fetch","signal","then","response","json","fetchedData","catch","e","aborted","abort","createContext","LoginForm","loading","setLoading","onSubmit","preventDefault","login","htmlFor","name","LoginPage","href","target","rel","AppHeader","to","onClick","logout","FullSizedComponent","children","style","display","height","width","LoadingContent","ErrorContent","LoadableComponent","Avatar","fontSize","displayStatus","initials","firstName","lastName","fontColor","tinycolor","color","getBrightness","backgroundColor","status","ContentStatistics","commentsCount","background","parentType","isNaN","ContentMenu","addReaction","Comment","comment","setReactions","reactionType","newReactions","filter","newReaction","now","commentId","push","content","ContentInput","buttonLabel","rows","submit","setFocus","inputRef","useRef","newContent","current","value","trim","focus","ref","CommentsList","comments","addComment","inputVisible","setInputVisible","length","map","Post","post","setComments","postId","newComments","toUTCString","Posts","posts","setPosts","fetchPostsError","fetchPosts","fetchCommentsError","fetchComments","postReactions","fetchPostReactionsError","fetchPostReactions","commentReactions","fetchCommentReactionsError","fetchCommentReactions","fetchUsersError","enrichedPosts","setEnrichedPosts","sortedPosts","sort","sortedComments","useFetchPosts","fetchedPosts","postsError","publishPost","newPostContent","newPosts","FriendCard","FriendsList","friends","fetchFriends","ProfileStatisticCard","label","Profile","profileOwner","info","FriendProfile","friendId","useParams","Number","Message","friend","message","Conversation","messages","setMessages","friendError","allMessages","fetchAllMessages","sortedMessages","useFetchMessages","fetchedMessages","messagesError","sendMessage","newMessageContent","newMessage","newMessages","FriendSelector","Messages","view","AppContent","match","useRouteMatch","path","exact","from","AppPage","FullScreenComponent","App","setUserId","logged","setTimeout","useAuth","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abe47780.chunk.js","sourcesContent":["import \"./loading-icon.scss\";\r\n\r\nimport { ImSpinner3 as SpinnerIcon } from \"react-icons/im\";\r\n\r\nexport default function LoadingIcon() {\r\n  return (\r\n    <div className=\"loading-icon\">\r\n      <SpinnerIcon />\r\n    </div>\r\n  );\r\n}\r\n","import { authContext } from \"./auth\";\r\nimport { useCallback, useContext, useEffect, useState, useMemo } from \"react\";\r\n\r\n// -------------------------------------------------------------------------\r\n// helper methods for sorting by date\r\n// -------------------------------------------------------------------------\r\nconst sortFromEarliest = (item1, item2) =>\r\n  new Date(item1.createdAt).getTime() - new Date(item2.createdAt).getTime();\r\n\r\nconst sortFromLatest = (item1, item2) =>\r\n  new Date(item2.createdAt).getTime() - new Date(item1.createdAt).getTime();\r\n\r\n// -------------------------------------------------------------------------\r\n// display date hook\r\n// -------------------------------------------------------------------------\r\nexport function useDisplayDate(date) {\r\n  const displayDate = useMemo(\r\n    () => (date ? new Date(date).toLocaleDateString(\"en-US\") : null),\r\n    [date]\r\n  );\r\n  return displayDate;\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// reactions summary hook\r\n// -------------------------------------------------------------------------\r\nexport function useReactionsSummary(reactions) {\r\n  const auth = useContext(authContext);\r\n  const [reactionsSummary, setReactionsSummary] = useState({\r\n    userReaction: \"\",\r\n    likes: 0,\r\n    dislikes: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (reactions) {\r\n      const newSummary = {\r\n        userReaction: \"\",\r\n        likes: 0,\r\n        dislikes: 0,\r\n      };\r\n\r\n      reactions.forEach((reaction) => {\r\n        if (reaction.userId === auth.userId)\r\n          newSummary.userReaction = reaction.type;\r\n\r\n        if (reaction.type === \"like\") newSummary.likes = newSummary.likes + 1;\r\n        else if (reaction.type === \"dislike\")\r\n          newSummary.dislikes = newSummary.dislikes + 1;\r\n      });\r\n\r\n      setReactionsSummary(newSummary);\r\n    }\r\n  }, [reactions, auth]);\r\n\r\n  return reactionsSummary;\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// fetch user data hook\r\n// -------------------------------------------------------------------------\r\nexport function useFetchUser(userId) {\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [users, fetchError, fetchUsers] = useFetchJson();\r\n\r\n  // fetch users\r\n  useEffect(() => {\r\n    fetchUsers(\"./data/users.json\");\r\n  }, [fetchUsers]);\r\n\r\n  // set correct user after fetching\r\n  useEffect(() => {\r\n    if (users) {\r\n      const foundUser = users.find((user) => user.id === userId);\r\n      if (foundUser) {\r\n        setUser(foundUser);\r\n      } else {\r\n        setError(\"User does not exist\");\r\n      }\r\n    }\r\n  }, [userId, users]);\r\n\r\n  // fetch error\r\n  useEffect(() => {\r\n    if (fetchError) {\r\n      setError(\"Error while fetching the data\");\r\n    }\r\n  }, [fetchError]);\r\n\r\n  return [user, error];\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// fetch messages hook\r\n// -------------------------------------------------------------------------\r\nexport function useFetchMessages(friendId) {\r\n  const [messages, setMessages] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const auth = useContext(authContext);\r\n  const [allMessages, fetchError, fetchAllMessages] = useFetchJson();\r\n\r\n  // fetch all messages\r\n  useEffect(() => {\r\n    fetchAllMessages(\"./data/messages.json\");\r\n  }, [fetchAllMessages]);\r\n\r\n  // filter messages\r\n  useEffect(() => {\r\n    if (allMessages) {\r\n      const filteredMessages = allMessages.filter(\r\n        (message) =>\r\n          (message.userId === auth.userId && message.friendId === friendId) ||\r\n          (message.userId === friendId && message.friendId === auth.userId)\r\n      );\r\n      const sortedMessages = filteredMessages.sort(sortFromEarliest);\r\n\r\n      setMessages(sortedMessages);\r\n      setError(null);\r\n    }\r\n  }, [auth, friendId, allMessages]);\r\n\r\n  // set fetch error\r\n  useEffect(() => {\r\n    if (fetchError) {\r\n      setError(\"Error while fetching the data\");\r\n    }\r\n  }, [fetchError]);\r\n\r\n  return [messages, error];\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// fetch posts hook\r\n// -------------------------------------------------------------------------\r\nexport function useFetchPosts() {\r\n  const [posts, fetchPostsError, fetchPosts] = useFetchJson();\r\n  const [comments, fetchCommentsError, fetchComments] = useFetchJson();\r\n  const [\r\n    postReactions,\r\n    fetchPostReactionsError,\r\n    fetchPostReactions,\r\n  ] = useFetchJson();\r\n  const [\r\n    commentReactions,\r\n    fetchCommentReactionsError,\r\n    fetchCommentReactions,\r\n  ] = useFetchJson();\r\n  const [users, fetchUsersError, fetchUsers] = useFetchJson();\r\n  const [enrichedPosts, setEnrichedPosts] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // fetch all data from separate files\r\n  useEffect(() => {\r\n    fetchPosts(\"./data/posts.json\");\r\n  }, [fetchPosts]);\r\n\r\n  useEffect(() => {\r\n    fetchComments(\"./data/comments.json\");\r\n  }, [fetchComments]);\r\n\r\n  useEffect(() => {\r\n    fetchPostReactions(\"./data/post-reactions.json\");\r\n  }, [fetchPostReactions]);\r\n\r\n  useEffect(() => {\r\n    fetchCommentReactions(\"./data/comment-reactions.json\");\r\n  }, [fetchCommentReactions]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(\"./data/users.json\");\r\n  }, [fetchUsers]);\r\n\r\n  // combine all data into enriched posts\r\n  useEffect(() => {\r\n    if (posts && comments && postReactions && commentReactions && users) {\r\n      // sort posts\r\n      const sortedPosts = posts.sort(sortFromLatest);\r\n\r\n      sortedPosts.forEach((post) => {\r\n        // add user data\r\n        post.user = users.find((user) => user.id === post.userId);\r\n\r\n        // add reactions to post\r\n        post.reactions = postReactions.filter(\r\n          (reaction) => reaction.postId === post.id\r\n        );\r\n\r\n        // filter comments related to post\r\n        const postComments = comments.filter(\r\n          (comment) => comment.postId === post.id\r\n        );\r\n        // sort comments\r\n        const sortedComments = postComments.sort(sortFromLatest);\r\n\r\n        // add user data and reactions to comments\r\n        sortedComments.forEach((comment) => {\r\n          comment.user = users.find((user) => user.id === comment.userId);\r\n          comment.reactions = commentReactions.filter(\r\n            (reaction) => reaction.commentId === comment.id\r\n          );\r\n        });\r\n\r\n        // add comments to post\r\n        post.comments = sortedComments;\r\n      });\r\n\r\n      setEnrichedPosts(sortedPosts);\r\n    }\r\n  }, [posts, comments, postReactions, commentReactions, users]);\r\n\r\n  // set fetch error\r\n  useEffect(() => {\r\n    if (\r\n      fetchPostsError ||\r\n      fetchCommentsError ||\r\n      fetchPostReactionsError ||\r\n      fetchCommentReactionsError ||\r\n      fetchUsersError\r\n    ) {\r\n      setError(\"Error while fetching the data\");\r\n    }\r\n  }, [\r\n    fetchPostsError,\r\n    fetchCommentsError,\r\n    fetchPostReactionsError,\r\n    fetchCommentReactionsError,\r\n    fetchUsersError,\r\n  ]);\r\n\r\n  return [enrichedPosts, error];\r\n}\r\n\r\n// -------------------------------------------------------------------------\r\n// fetch json file hook\r\n// -------------------------------------------------------------------------\r\nexport function useFetchJson() {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [abortController] = useState(new AbortController());\r\n\r\n  const fetchJson = useCallback(\r\n    (url) => {\r\n      setData(null);\r\n      setError(null);\r\n\r\n      fetch(url, { signal: abortController.signal })\r\n        .then((response) => response.json())\r\n        .then((fetchedData) => {\r\n          setData(fetchedData);\r\n        })\r\n        .catch((e) => {\r\n          if (!abortController.signal.aborted) {\r\n            setError(e);\r\n          }\r\n        });\r\n    },\r\n    [abortController]\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      abortController.abort();\r\n    };\r\n  }, [abortController]);\r\n\r\n  return [data, error, fetchJson];\r\n}\r\n","import { createContext, useMemo, useState } from \"react\";\r\nimport { useFetchUser } from \"./custom-hooks\";\r\n\r\nexport const authContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const [userId, setUserId] = useState(false);\r\n  const [user, error] = useFetchUser(userId);\r\n\r\n  const logged = useMemo(() => !!userId, [userId]);\r\n\r\n  const login = (userId) => {\r\n    setTimeout(() => {\r\n      setUserId(userId);\r\n    }, 500);\r\n  };\r\n\r\n  const logout = () => {\r\n    setTimeout(() => {\r\n      setUserId(null);\r\n    }, 500);\r\n  };\r\n\r\n  return [userId, user, logged, login, logout];\r\n};\r\n","import LoadingIcon from \"./loading-icon\";\r\nimport { authContext } from \"./auth\";\r\nimport \"./login-form.scss\";\r\n\r\nimport { useContext, useState } from \"react\";\r\n\r\nexport default function LoginForm() {\r\n  const [loading, setLoading] = useState(false);\r\n  const auth = useContext(authContext);\r\n\r\n  return (\r\n    <form\r\n      id=\"login-form\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        auth.login(1);\r\n      }}\r\n    >\r\n      <label htmlFor=\"login-username\">Username</label>\r\n      <input id=\"login-username\" name=\"username\" type=\"text\" />\r\n\r\n      <label htmlFor=\"login-password\">Password</label>\r\n      <input id=\"login-password\" name=\"password\" type=\"password\" />\r\n\r\n      <button id=\"login-button\" type=\"submit\">\r\n        {loading ? <LoadingIcon /> : <p>Log in</p>}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import \"./login-page.scss\";\r\nimport LoginForm from \"./login-form\";\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <div id=\"login-page\">\r\n      <header>\r\n        <h1>Social App</h1>\r\n        <ul>\r\n          <li>Only Front-End part of the page</li>\r\n          <li>Mockup data fetched from json files</li>\r\n          <li>\r\n            Press <strong>Log in</strong> to start\r\n          </li>\r\n        </ul>\r\n      </header>\r\n\r\n      <div id=\"login-form-container\">\r\n        <LoginForm />\r\n      </div>\r\n\r\n      <footer>\r\n        Photo by{\" \"}\r\n        <a\r\n          href=\"https://unsplash.com/@marekpiwnicki?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Marek Piwnicki\r\n        </a>{\" \"}\r\n        on{\" \"}\r\n        <a\r\n          href=\"https://unsplash.com/@marekpiwnicki?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Unsplash\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import { authContext } from \"./auth\";\r\nimport \"./app-header.scss\";\r\n\r\nimport {\r\n  IoGridOutline,\r\n  IoPeople,\r\n  IoChatbubblesOutline,\r\n  IoPersonCircleOutline,\r\n  IoLogOutOutline,\r\n} from \"react-icons/io5\";\r\nimport { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function AppHeader() {\r\n  const auth = useContext(authContext);\r\n\r\n  return (\r\n    <nav id=\"app-header\">\r\n      <NavLink to=\"/app/posts\">\r\n        <IoGridOutline />\r\n        <span>Posts</span>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/app/friends\">\r\n        <IoPeople />\r\n        <span>Friends</span>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/app/messages\">\r\n        <IoChatbubblesOutline />\r\n        <span>Messages</span>\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/app/profile\">\r\n        <IoPersonCircleOutline />\r\n        <span>Profile</span>\r\n      </NavLink>\r\n\r\n      <button id=\"logout-button\" onClick={auth.logout}>\r\n        <IoLogOutOutline />\r\n        <span>Log out</span>\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n","export default function FullSizedComponent({ children }) {\r\n  return (\r\n    <div style={{ display: \"grid\", height: \"100%\", width: \"100%\" }}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import FullSizedComponent from \"./full-sized-component\";\r\nimport LoadingIcon from \"./loading-icon\";\r\nimport \"./loading-content.scss\";\r\n\r\nexport default function LoadingContent() {\r\n  return (\r\n    <FullSizedComponent>\r\n      <div className=\"loading-content\">\r\n        <i>\r\n          <LoadingIcon />\r\n        </i>\r\n        <p>Loading</p>\r\n      </div>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import FullSizedComponent from \"./full-sized-component\";\r\nimport \"./error-content.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ErrorContent({ error }) {\r\n  return (\r\n    <FullSizedComponent>\r\n      <div className=\"error-content\">\r\n        <h2>Error:</h2>\r\n        <p>{error}</p>\r\n        <Link to=\"/\">Return to homepage</Link>\r\n      </div>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import LoadingContent from \"./loading-content\";\r\nimport ErrorContent from \"./error-content\";\r\n\r\nexport default function LoadableComponent({ children, loading, error }) {\r\n  return loading ? (\r\n    <LoadingContent />\r\n  ) : error ? (\r\n    <ErrorContent error={error} />\r\n  ) : (\r\n    children\r\n  );\r\n}\r\n","import \"./avatar.scss\";\r\nimport tinycolor from \"tinycolor2\";\r\n\r\nexport default function Avatar({ user, fontSize, displayStatus }) {\r\n  const initials = user.firstName[0] + user.lastName[0];\r\n  const brightness = tinycolor(user.color).getBrightness();\r\n  let fontColor = \"black\";\r\n  if (brightness < 160) fontColor = \"white\";\r\n\r\n  return (\r\n    <div className=\"avatar-wrapper\" style={{ fontSize }}>\r\n      <div\r\n        className=\"avatar\"\r\n        style={{ backgroundColor: user.color, color: fontColor }}\r\n      >\r\n        <p>{initials}</p>\r\n      </div>\r\n      {displayStatus && user.status === \"online\" && (\r\n        <div className=\"profile-status online\"></div>\r\n      )}\r\n      {displayStatus && user.status === \"offline\" && (\r\n        <div className=\"profile-status offline\"></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./content-statistics.scss\";\r\nimport {\r\n  IoHeart as LikeIcon,\r\n  IoHeartDislike as DislikeIcon,\r\n} from \"react-icons/io5\";\r\n\r\nexport default function ContentStatistics({\r\n  reactionsSummary,\r\n  commentsCount,\r\n  background,\r\n  parentType,\r\n}) {\r\n  return (\r\n    <div\r\n      className={\r\n        \"content-statistics\" + (background ? \" background-\" + background : \"\")\r\n      }\r\n    >\r\n      <ol className=\"content-statistics-list\">\r\n        {!isNaN(commentsCount) && (\r\n          <li>\r\n            <strong>{commentsCount}</strong>{\" \"}\r\n            {commentsCount === 1 ? \"comment\" : \"comments\"}\r\n          </li>\r\n        )}\r\n        <li>\r\n          <strong>{reactionsSummary.likes}</strong>{\" \"}\r\n          {reactionsSummary.likes === 1 ? \"like\" : \"likes\"}\r\n        </li>\r\n        <li>\r\n          <strong>{reactionsSummary.dislikes}</strong>{\" \"}\r\n          {reactionsSummary.dislikes === 1 ? \"dislike\" : \"dislikes\"}\r\n        </li>\r\n      </ol>\r\n      {reactionsSummary.userReaction === \"like\" ? (\r\n        <p className=\"reaction-notification\">\r\n          <LikeIcon />\r\n          You liked this {parentType}\r\n        </p>\r\n      ) : reactionsSummary.userReaction === \"dislike\" ? (\r\n        <p className=\"reaction-notification\">\r\n          <DislikeIcon />\r\n          You disliked this {parentType}\r\n        </p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import \"./content-menu.scss\";\r\nimport {\r\n  IoHeart as LikeIcon,\r\n  IoHeartDislike as DislikeIcon,\r\n} from \"react-icons/io5\";\r\n\r\nexport default function ContentMenu({ addReaction, background }) {\r\n  return (\r\n    <div\r\n      className={\r\n        \"content-menu\" + (background ? \" background-\" + background : \"\")\r\n      }\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        className=\"like-button\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          addReaction(\"like\");\r\n        }}\r\n      >\r\n        <LikeIcon />\r\n        Like\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"dislike-button\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          addReaction(\"dislike\");\r\n        }}\r\n      >\r\n        <DislikeIcon />\r\n        Dislike\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import Avatar from \"./avatar\";\r\nimport ContentStatistics from \"./content-statistics\";\r\nimport ContentMenu from \"./content-menu\";\r\nimport \"./comment.scss\";\r\nimport { useCallback, useContext, useState } from \"react\";\r\nimport { useDisplayDate, useReactionsSummary } from \"./custom-hooks\";\r\nimport { authContext } from \"./auth\";\r\n\r\nexport default function Comment({ comment }) {\r\n  const [reactions, setReactions] = useState(comment.reactions);\r\n  const auth = useContext(authContext);\r\n  const reactionsSummary = useReactionsSummary(reactions);\r\n  const createdAt = useDisplayDate(comment.createdAt);\r\n\r\n  const addReaction = useCallback(\r\n    (reactionType) => {\r\n      if (reactionsSummary.userReaction !== reactionType) {\r\n        let newReactions = [];\r\n        if (reactionsSummary.userReaction) {\r\n          // remove previous reaction\r\n          newReactions = reactions.filter(\r\n            (reaction) => reaction.userId !== auth.userId\r\n          );\r\n        } else {\r\n          // copy previous reactions\r\n          newReactions = [...reactions];\r\n        }\r\n\r\n        // create new reaction\r\n        const newReaction = {\r\n          id: Date.now(),\r\n          commentId: comment.id,\r\n          userId: auth.userId,\r\n          type: reactionType,\r\n        };\r\n\r\n        // add reaction to list\r\n        newReactions.push(newReaction);\r\n\r\n        setReactions(newReactions);\r\n      }\r\n    },\r\n    [comment, reactions, reactionsSummary, auth]\r\n  );\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"comment-avatar\">\r\n        <Avatar user={comment.user} />\r\n      </div>\r\n      <div className=\"comment-body\">\r\n        <p className=\"comment-date\">{createdAt}</p>\r\n        <p className=\"comment-content\">{comment.content}</p>\r\n\r\n        <div className=\"comment-statistics\">\r\n          <ContentStatistics\r\n            reactionsSummary={reactionsSummary}\r\n            background=\"dark\"\r\n            parentType=\"comment\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"comment-menu\">\r\n          <ContentMenu addReaction={addReaction} background=\"dark\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./content-input.scss\";\r\n\r\nimport { useCallback, useEffect, useRef } from \"react\";\r\n\r\nexport default function ContentInput({ buttonLabel, rows, submit, setFocus }) {\r\n  const inputRef = useRef();\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const newContent = inputRef.current.value.trim();\r\n      if (newContent) {\r\n        // create new message object\r\n        submit(newContent);\r\n        inputRef.current.value = \"\";\r\n      }\r\n    },\r\n    [submit]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (setFocus) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [setFocus]);\r\n\r\n  return (\r\n    <form className=\"input-form\" onSubmit={onSubmit}>\r\n      <textarea rows={rows || \"3\"} ref={inputRef} />\r\n      <button type=\"submit\">{buttonLabel || \"Submit\"}</button>\r\n    </form>\r\n  );\r\n}\r\n","import Comment from \"./comment\";\r\nimport ContentInput from \"./content-input\";\r\nimport \"./comments-list.scss\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function CommentsList({ comments, addComment }) {\r\n  const [inputVisible, setInputVisible] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"comments-menu\">\r\n        {inputVisible ? (\r\n          <ContentInput\r\n            buttonLabel=\"Add comment\"\r\n            rows=\"1\"\r\n            submit={(content) => {\r\n              addComment(content);\r\n              setInputVisible(false);\r\n            }}\r\n            setFocus={true}\r\n          />\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            className=\"new-comment-button\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setInputVisible(true);\r\n            }}\r\n          >\r\n            Add new Comment\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <h3 className=\"comments-header\">\r\n        {comments.length > 0 ? \"Latest comments\" : \"No comments\"}\r\n      </h3>\r\n\r\n      <ol className=\"comments-list\">\r\n        {comments.map((comment) => (\r\n          <li key={comment.id}>\r\n            <Comment comment={comment} />\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n","import Avatar from \"./avatar\";\r\nimport { useCallback, useContext, useState } from \"react\";\r\nimport \"./post.scss\";\r\nimport ContentStatistics from \"./content-statistics\";\r\nimport ContentMenu from \"./content-menu\";\r\nimport { useDisplayDate, useReactionsSummary } from \"./custom-hooks\";\r\nimport { authContext } from \"./auth\";\r\nimport CommentsList from \"./comments-list\";\r\n\r\nexport default function Post({ post }) {\r\n  const [reactions, setReactions] = useState(post.reactions);\r\n  const [comments, setComments] = useState(post.comments);\r\n  const auth = useContext(authContext);\r\n  const reactionsSummary = useReactionsSummary(reactions);\r\n  const createdAt = useDisplayDate(post.createdAt);\r\n\r\n  const addReaction = useCallback(\r\n    (reactionType) => {\r\n      if (reactionsSummary.userReaction !== reactionType) {\r\n        let newReactions = [];\r\n        if (reactionsSummary.userReaction) {\r\n          // remove previous reaction\r\n          newReactions = reactions.filter(\r\n            (reaction) => reaction.userId !== auth.userId\r\n          );\r\n        } else {\r\n          // copy previous reactions\r\n          newReactions = [...reactions];\r\n        }\r\n\r\n        // create new reaction\r\n        const newReaction = {\r\n          id: Date.now(),\r\n          postId: post.id,\r\n          userId: auth.userId,\r\n          type: reactionType,\r\n        };\r\n\r\n        // add reaction to list\r\n        newReactions.push(newReaction);\r\n\r\n        // update reactions\r\n        setReactions(newReactions);\r\n      }\r\n    },\r\n    [post, reactions, reactionsSummary, auth]\r\n  );\r\n\r\n  const addComment = useCallback(\r\n    (content) => {\r\n      // create new comment\r\n      const newComment = {\r\n        id: Date.now(),\r\n        content: content,\r\n        createdAt: new Date().toUTCString(),\r\n        postId: post.id,\r\n        userId: auth.userId,\r\n        user: { ...auth.user },\r\n        reactions: [],\r\n      };\r\n\r\n      // create new comments\r\n      const newComments = [newComment, ...comments];\r\n\r\n      // update comments\r\n      setComments(newComments);\r\n    },\r\n    [post, comments, auth]\r\n  );\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post-header\">\r\n        <div className=\"post-avatar\">\r\n          <Avatar user={post.user} fontSize=\"1.2em\" />\r\n        </div>\r\n        <h2 className=\"post-header-text\">\r\n          {post.user.firstName + \" \" + post.user.lastName}\r\n        </h2>\r\n      </div>\r\n\r\n      <div className=\"post-body\">\r\n        <p className=\"post-date\">{createdAt}</p>\r\n        <p className=\"post-content\">{post.content}</p>\r\n\r\n        <div className=\"post-statistics\">\r\n          <ContentStatistics\r\n            reactionsSummary={reactionsSummary}\r\n            commentsCount={comments.length}\r\n            parentType=\"post\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"post-menu\">\r\n          <ContentMenu addReaction={addReaction} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"post-comments\">\r\n        <CommentsList comments={comments} addComment={addComment} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import LoadableComponent from \"./loadable-component\";\r\nimport FullSizedComponent from \"./full-sized-component\";\r\nimport Post from \"./post\";\r\nimport ContentInput from \"./content-input\";\r\nimport { authContext } from \"./auth\";\r\nimport { useFetchPosts } from \"./custom-hooks\";\r\nimport \"./posts.scss\";\r\n\r\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nexport default function Posts() {\r\n  const [posts, setPosts] = useState(null);\r\n  const auth = useContext(authContext);\r\n  const [fetchedPosts, postsError] = useFetchPosts();\r\n\r\n  // set posts after initial fetching\r\n  useEffect(() => {\r\n    if (fetchedPosts) {\r\n      setPosts(fetchedPosts);\r\n    }\r\n  }, [fetchedPosts]);\r\n\r\n  // publish post - add new post to posts list\r\n  const publishPost = useCallback(\r\n    (newPostContent) => {\r\n      if (posts && auth.user) {\r\n        // create new post object\r\n        const newPost = {\r\n          id: Date.now(),\r\n          content: newPostContent,\r\n          userId: auth.userId,\r\n          user: { ...auth.user },\r\n          createdAt: new Date().toUTCString(),\r\n          reactions: [],\r\n          comments: [],\r\n        };\r\n        const newPosts = [newPost, ...posts];\r\n        setPosts(newPosts);\r\n      }\r\n    },\r\n    [auth, posts]\r\n  );\r\n\r\n  const error = useMemo(() => (postsError ? \"Error fetching data\" : null), [\r\n    postsError,\r\n  ]);\r\n\r\n  return (\r\n    <FullSizedComponent>\r\n      <LoadableComponent loading={!posts && !error} error={error}>\r\n        <div id=\"posts\">\r\n          <div id=\"new-post-form\">\r\n            <ContentInput buttonLabel=\"Publish\" submit={publishPost} />\r\n          </div>\r\n          <ol id=\"posts-list\">\r\n            {posts\r\n              ? posts.map((post) => (\r\n                  <li key={post.id}>\r\n                    <Post post={post} />\r\n                  </li>\r\n                ))\r\n              : null}\r\n          </ol>\r\n        </div>\r\n      </LoadableComponent>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import Avatar from \"./avatar\";\r\nimport \"./friend-card.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function FriendCard({ user }) {\r\n  return (\r\n    <Link to={`/app/friends/${user.id}`}>\r\n      <div className=\"friend-card\">\r\n        <div className=\"friend-avatar\">\r\n          <Avatar user={user} fontSize={\"2em\"} displayStatus={true} />\r\n        </div>\r\n\r\n        <div className=\"friend-info\">\r\n          <p>{user.firstName + \" \" + user.lastName}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import { useFetchJson } from \"./custom-hooks\";\r\nimport { useEffect } from \"react\";\r\nimport FullSizedComponent from \"./full-sized-component\";\r\nimport LoadableComponent from \"./loadable-component\";\r\nimport FriendCard from \"./friend-card\";\r\nimport \"./friends-list.scss\";\r\n\r\nexport default function FriendsList() {\r\n  const [friends, error, fetchFriends] = useFetchJson();\r\n\r\n  // fetch friends\r\n  useEffect(() => {\r\n    fetchFriends(\"./data/friends.json\");\r\n  }, [fetchFriends]);\r\n\r\n  return (\r\n    <FullSizedComponent>\r\n      <LoadableComponent loading={!friends && !error} error={error}>\r\n        {friends ? (\r\n          <div id=\"friends-list\">\r\n            <h1>Friends</h1>\r\n            <div id=\"friends-cards\">\r\n              {friends.map((user) => (\r\n                <FriendCard user={user} key={user.id} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </LoadableComponent>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import \"./profile-statistic-card.scss\";\r\n\r\nexport default function ProfileStatisticCard({ label, value }) {\r\n  return (\r\n    <div className=\"profile-statistic-card\">\r\n      <h2 className=\"card-label\">{label}:</h2>\r\n      <p className=\"card-value\">{value}</p>\r\n    </div>\r\n  );\r\n}\r\n","import LoadableComponent from \"./loadable-component\";\r\nimport FullSizedComponent from \"./full-sized-component\";\r\nimport ProfileStatisticCard from \"./profile-statistic-card\";\r\nimport Avatar from \"./avatar\";\r\nimport { useFetchUser } from \"./custom-hooks\";\r\nimport { authContext } from \"./auth\";\r\nimport \"./profile.scss\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext, useMemo } from \"react\";\r\n\r\nexport default function Profile({ userId }) {\r\n  const [user, error] = useFetchUser(userId);\r\n  const auth = useContext(authContext);\r\n  const profileOwner = useMemo(() => userId === auth.userId, [userId, auth]);\r\n\r\n  return (\r\n    <FullSizedComponent>\r\n      <LoadableComponent loading={!user && !error} error={error}>\r\n        {user ? (\r\n          <div id=\"profile\">\r\n            <div id=\"profile-avatar\">\r\n              <Avatar user={user} fontSize={\"5em\"} />\r\n            </div>\r\n            <div>\r\n              <div id=\"profile-header\">\r\n                <h1 className=\"display-name\">\r\n                  {user.firstName + \" \" + user.lastName}\r\n                </h1>\r\n                <p>{user.info}</p>\r\n              </div>\r\n              <div id=\"profile-statistics\">\r\n                <ProfileStatisticCard label={\"Friends\"} value={136} />\r\n                <ProfileStatisticCard label={\"Posts\"} value={342} />\r\n                <ProfileStatisticCard label={\"Comments\"} value={752} />\r\n              </div>\r\n              {!profileOwner && (\r\n                <Link\r\n                  id=\"open-conversation-button\"\r\n                  to={`/app/messages/${userId}`}\r\n                >\r\n                  Open conversation\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </LoadableComponent>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import Profile from \"./profile\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function FriendProfile() {\r\n  const { friendId } = useParams();\r\n\r\n  return <Profile userId={Number(friendId)} />;\r\n}\r\n","import Avatar from \"./avatar\";\r\nimport { authContext } from \"./auth\";\r\nimport \"./message.scss\";\r\nimport { useContext } from \"react\";\r\nimport { useDisplayDate } from \"./custom-hooks\";\r\n\r\nexport default function Message({ friend, message }) {\r\n  const auth = useContext(authContext);\r\n  const createdAt = useDisplayDate(message.createdAt);\r\n\r\n  const type = message.userId === auth.userId ? \"sent\" : \"received\";\r\n\r\n  return (\r\n    <div className={\"message \" + type}>\r\n      {type === \"received\" && (\r\n        <div className=\"message-avatar\">\r\n          <Avatar user={friend} />\r\n        </div>\r\n      )}\r\n      <div className=\"message-body\">\r\n        <p className=\"message-content\">{message.content}</p>\r\n        <p className=\"message-date\">{createdAt}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import FullSizedComponent from \"./full-sized-component\";\r\nimport LoadableComponent from \"./loadable-component\";\r\nimport Message from \"./message\";\r\nimport { useFetchUser, useFetchMessages } from \"./custom-hooks\";\r\nimport { authContext } from \"./auth\";\r\nimport \"./conversation.scss\";\r\nimport { useCallback, useContext, useEffect, useState, useMemo } from \"react\";\r\nimport ContentInput from \"./content-input\";\r\n\r\nexport default function Conversation({ friendId }) {\r\n  const [messages, setMessages] = useState(null);\r\n  const auth = useContext(authContext);\r\n  const [friend, friendError] = useFetchUser(friendId);\r\n  const [fetchedMessages, messagesError] = useFetchMessages(friendId);\r\n\r\n  // set messages after initial fetching\r\n  useEffect(() => {\r\n    if (fetchedMessages) {\r\n      setMessages(fetchedMessages);\r\n    }\r\n  }, [fetchedMessages]);\r\n\r\n  // send message - add new message to messages list\r\n  const sendMessage = useCallback(\r\n    (newMessageContent) => {\r\n      // create new message object\r\n      const newMessage = {\r\n        id: Date.now(),\r\n        userId: auth.userId,\r\n        friendId,\r\n        content: newMessageContent,\r\n        createdAt: new Date().toUTCString(),\r\n      };\r\n      const newMessages = [...messages, newMessage];\r\n      setMessages(newMessages);\r\n    },\r\n    [auth, friendId, messages]\r\n  );\r\n\r\n  const error = useMemo(\r\n    () => (friendError || messagesError ? \"Error fetching data\" : null),\r\n    [friendError, messagesError]\r\n  );\r\n\r\n  const loading = useMemo(() => !friend && !messages && !error, [\r\n    friend,\r\n    messages,\r\n    error,\r\n  ]);\r\n\r\n  return (\r\n    <FullSizedComponent>\r\n      <LoadableComponent loading={loading} error={error}>\r\n        {friend && messages ? (\r\n          <div id=\"conversation\">\r\n            <header>\r\n              <h1>{friend.firstName + \" \" + friend.lastName}</h1>\r\n            </header>\r\n            <ol id=\"messages-list\">\r\n              {messages.map((message) => (\r\n                <li key={message.id}>\r\n                  <Message friend={friend} message={message} />\r\n                </li>\r\n              ))}\r\n            </ol>\r\n            <div id=\"new-message-form\">\r\n              <ContentInput buttonLabel=\"Send\" rows=\"2\" submit={sendMessage} />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </LoadableComponent>\r\n    </FullSizedComponent>\r\n  );\r\n}\r\n","import LoadableComponent from \"./loadable-component\";\r\nimport Avatar from \"./avatar\";\r\nimport { useFetchJson } from \"./custom-hooks\";\r\nimport \"./friend-selector.scss\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoChevronForwardCircleOutline } from \"react-icons/io5\";\r\n\r\nexport function FriendSelector() {\r\n  const [friends, error, fetchFriends] = useFetchJson();\r\n\r\n  // fetch friends\r\n  useEffect(() => {\r\n    fetchFriends(\"./data/friends.json\");\r\n  }, [fetchFriends]);\r\n\r\n  return (\r\n    <LoadableComponent loading={!friends && !error}>\r\n      {friends ? (\r\n        <nav id=\"friend-selector\">\r\n          {friends.map((user) => (\r\n            <Link to={`/app/messages/${user.id}`} key={user.id}>\r\n              <Avatar user={user} fontSize={\"2em\"} displayStatus={true} />\r\n              <p className=\"friend-name\">\r\n                {user.firstName + \" \" + user.lastName}\r\n              </p>\r\n              <IoChevronForwardCircleOutline />\r\n            </Link>\r\n          ))}\r\n        </nav>\r\n      ) : null}\r\n    </LoadableComponent>\r\n  );\r\n}\r\n","import { useParams } from \"react-router\";\r\nimport Conversation from \"./conversation\";\r\nimport { FriendSelector } from \"./friend-selector\";\r\nimport FullSizedComponent from \"./full-sized-component\";\r\nimport \"./messages.scss\";\r\n\r\nexport default function Messages() {\r\n  const { friendId } = useParams();\r\n\r\n  const view = friendId ? \"conversation-view\" : \"contacts-view\";\r\n\r\n  return (\r\n    <div id=\"messages\" className={view}>\r\n      <div id=\"selector-wrapper\">\r\n        <FriendSelector />\r\n      </div>\r\n      <div id=\"conversation-wrapper\">\r\n        {friendId ? (\r\n          <Conversation friendId={Number(friendId)} />\r\n        ) : (\r\n          <FullSizedComponent>\r\n            <div id=\"conversation-pane\">\r\n              <h1>Select contact to start conversation</h1>\r\n            </div>\r\n          </FullSizedComponent>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Posts from \"./posts\";\r\nimport FriendsList from \"./friends-list\";\r\nimport FriendProfile from \"./friend-profile\";\r\nimport Messages from \"./messages\";\r\nimport Profile from \"./profile\";\r\nimport ErrorContent from \"./error-content\";\r\nimport { authContext } from \"./auth\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { Switch, Redirect, Route, useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function AppContent() {\r\n  const match = useRouteMatch();\r\n  const auth = useContext(authContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/posts`}>\r\n        <Posts />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/friends/:friendId`}>\r\n        <FriendProfile />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/friends`}>\r\n        <FriendsList />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/messages/:friendId`}>\r\n        <Messages />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/messages`}>\r\n        <Messages />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/profile`}>\r\n        <Profile userId={auth.userId} />\r\n      </Route>\r\n\r\n      <Redirect exact from={match.path} to={`${match.path}/posts`} />\r\n\r\n      <Route path=\"*\">\r\n        <ErrorContent error={\"Page does not exist\"} />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import AppHeader from \"./app-header\";\r\nimport AppContent from \"./app-content\";\r\n\r\nimport \"./app-page.scss\";\r\n\r\nexport default function AppPage() {\r\n  return (\r\n    <div id=\"app-page\">\r\n      <AppHeader />\r\n      <div id=\"app-content-wrapper\">\r\n        <AppContent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function FullScreenComponent({ children }) {\r\n  return (\r\n    <div style={{ display: \"grid\", height: \"100vh\", width: \"100vw\" }}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import LoginPage from \"./login-page\";\r\nimport AppPage from \"./app-page\";\r\nimport ErrorContent from \"./error-content\";\r\nimport FullScreenComponent from \"./full-screen-component\";\r\nimport { authContext, useAuth } from \"./auth\";\r\nimport \"./app.scss\";\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  const [userId, user, logged, login, logout] = useAuth();\r\n\r\n  return (\r\n    <authContext.Provider value={{ userId, user, logged, login, logout }}>\r\n      <Router>\r\n        <Switch>\r\n          {logged ? (\r\n            <Redirect from=\"/login\" to=\"/app\" />\r\n          ) : (\r\n            <Redirect from=\"/app\" to=\"/login\" />\r\n          )}\r\n\r\n          <Route path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n\r\n          <Route path=\"/app\">\r\n            <AppPage />\r\n          </Route>\r\n\r\n          <Route exact path=\"/\">\r\n            {logged ? (\r\n              <Redirect from=\"/\" to=\"/app\" />\r\n            ) : (\r\n              <Redirect from=\"/\" to=\"/login\" />\r\n            )}\r\n          </Route>\r\n\r\n          <Route path=\"*\">\r\n            <FullScreenComponent>\r\n              <ErrorContent error={\"Page does not exist\"} />\r\n            </FullScreenComponent>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </authContext.Provider>\r\n  );\r\n}\r\n","import App from \"./app\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}